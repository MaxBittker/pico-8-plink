pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- plink by max 

-- based on 
-- the adventures of jelpi
-- by zep

-- to do:
-- title / restart logic
-- block loot
-- top-solid ground
-- better duping

max_actors = 128

music(0, 0, 3)

function make_fire(x,y)
	local a = {}
	a.x=x a.y=y 
  a.frame = 0 
  add(fire, a)
	return a
end

function make_actor(k,x,y,d)
	local a = {}
	a.kind = k
	a.life = 1
	a.x=x a.y=y a.dx=0 a.dy=0
	a.ddy = 0.06 -- gravity
 a.w=0.3 a.h=0.5 -- half-width
 a.d=d a.bounce=0.8
 a.frame = 1  a.f0 = 0
 a.t=0
 a.standing = false
 if (count(actor) < max_actors) then
  add(actor, a)
 end
	return a
end

function make_sparkle(x,y,frame,col)
 local s = {}
 s.x=x
 s.y=y
 s.frame=frame
 s.col=col
 s.t=0 s.max_t = 8+rnd(4)
 s.dx = 0 s.dy = 0
 s.ddy = 0
 add(sparkle,s)
 return s
end

function make_player(x, y, d)
 pl = make_actor(1, x, y, d)
 pl.charge = 0
 pl.super  = 0
 pl.score  = 0
 pl.bounce = 0
 pl.delay  = 0
 pl.pal    = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 
 return pl
end

-- called at start by pico-8
function _init()

 actor = {}
 sparkle = {}
 fire = {}
 
 -- spawn player
 for y=0,63 do for x=0,127 do
  if (mget(x,y) == 104) then
   player = make_player(x,y+1,1)
  end
  if (mget(x,y) == 64) then
   fire = make_fire(x,y)
   print("made fire")
  end
 end end
 t = 0
 
 death_t = 0
end

-- clear_cel using neighbour val
-- prefer empty, then non-ground
-- then left neighbour
function clear_cel(x, y)
 val0 = mget(x-1,y)
 val1 = mget(x+1,y)
 if (val0 == 0 or val1 == 0) then
  mset(x,y,0)
 elseif (not fget(val1,1)) then
  mset(x,y,val1)
 else
  mset(x,y,val0)
 end
end


function move_spawns(x0, y0)

 -- spawn stuff close to x0,y0

 for y=0,32 do
  for x=x0-10,x0+10 do
   val = mget(x,y)
   m = nil

   -- pickup
   if (fget(val, 5)) then    
    m = make_actor(2,x+0.5,y+1,1)
    m.f0 = val
    m.frame = val
    if (fget(val,4)) then
     m.ddy = 0 -- zero gravity
    end
   end

   -- monster
   if (fget(val, 3)) then
    m = make_actor(3,x+0.5,y+1,-1)
    m.f0=val
    m.frame=val
   end
   
   -- clear cel if spawned something
   if (m ~= nil) then
    clear_cel(x,y)
   end
  end
 end

end

-- test if a point is solid
function solid (x, y)
	if (x < 0 or x >= 128 ) then
		return true end
				
	val = mget(x, y)
	return fget(val, 1)
end

function move_pickup(a)
 a.frame = a.f0
-- if (flr((t/4) % 2) == 0) then
--  a.frame = a.f0+1
-- end
end

function move_player(pl)

 if (pl.life == 0) then
    death_t = 1
    for i=1,32 do
     s=make_sparkle(
      pl.x, pl.y-0.6, 96, 0)
     s.dx = cos(i/32)/2
     s.dy = sin(i/32)/2
     s.max_t = 30 
     s.ddy = 0.01
     s.frame=96+rnd(3)
     s.col = 7
    end
    
    del(actor,pl)
    
    sfx(16)
    music(-1)
    sfx(5)

  return
 end


 accel = 0.05
 if (pl.charge > 10) then
  accel = 0.08
 end
 
 if (not pl.standing) then
  accel = accel / 2
 end
  
 -- player control
	if (btn(0)) then 
			pl.dx = pl.dx - accel; pl.d=-1 end
	if (btn(1)) then 
		pl.dx = pl.dx + accel; pl.d=1 end

	if ((btn(4) or btn(2)) and 
--		solid(pl.x,pl.y)) then 
  pl.standing) then
		pl.dy = -0.3
    pl.dx *= 2
  sfx(8)
 end

 -- charge

 if (btn(5) and pl.charge == 0
 and pl.delay == 0) then
  pl.charge = 15
  
  pl.dx = pl.dx + pl.d * 0.4
  
  if (not pl.standing) then
   pl.dy = pl.dy - 0.2
  end 
 
  sfx(11)
 
 end
 
 -- charging
 
	if (pl.charge > 0 or
	    pl.super  > 0) then
	 pl.frame = 53
	 
	 if (abs(pl.dx) > 0.4 or
	     abs(pl.dy) > 0.2
	 ) then
	 
	 for i=1,3 do
	  local s = make_sparkle(
	   pl.x+pl.dx*i/3, 
	   pl.y+pl.dy*i/3 - 0.3,
	   96+rnd(3), (pl.t*3+i)%9+7)
	  if (rnd(2) < 1) then
	   s.col = 7
	  end
	  s.dx = -pl.dx*0.1
	  s.dy = -0.05*i/4
	  s.x = s.x + rnd(0.6)-0.3
	  s.y = s.y + rnd(0.6)-0.3
  end
  end
	end 
	
	pl.charge = max(0, pl.charge-1)
 if (pl.charge > 0) then
  pl.delay = 10
 else
  pl.delay = max(0,pl.delay-1)
 end

 pl.super = max(0, pl.super-1)
 
 -- frame	

 if (pl.standing) then
	 pl.f0 = (pl.f0+abs(pl.dx)*2+4) % 4
 else
	 pl.f0 = (pl.f0+abs(pl.dx)/2+4) % 4 
 end
 
 if (abs(pl.dx) < 0.1) 
 then
  pl.frame=104
   pl.f0=0
 else
	 pl.frame = 88+flr(pl.f0)
	end

	
end

function move_monster(m)
 m.dx = m.dx + m.d * 0.02

	m.f0 = (m.f0+abs(m.dx)*3+4) % 4
 m.frame = 112 + flr(m.f0)

 if (false and m.standing and rnd(100) < 1)
 then
  m.dy = -1
 end

end

function move_actor(pl)

 -- to do: replace with callbacks

 if (pl.kind == 1) then
  move_player(pl)
 end
 
 if (pl.kind == 2) then
  move_pickup(pl)
 end

 if (pl.kind == 3) then
  move_monster(pl)
 end

 pl.standing=false
 
 -- x movement 
	
 x1 = pl.x + pl.dx +
      sgn(pl.dx) * 0.3
      
 local broke_block = false

 if(not solid(x1,pl.y-0.5)) then
		pl.x = pl.x + pl.dx  
	else -- hit wall
		
	 -- search for contact point
	 while (not solid(pl.x + sgn(pl.dx)*0.3, pl.y-0.5)) do
	  pl.x = pl.x + sgn(pl.dx) * 0.1
	 end

  -- if charging, break block	
	 if (pl.charge ~= nil) then
	 
   if (pl.charge > 0 or 
       pl.super  > 0) then
    val = mget(x1, pl.y-0.5,0)
    if (fget(val,4)) then
     clear_cel(x1,pl.y-0.5)
     sfx(10)
     broke_block = true
     
     -- make debris
     
     for by=0,1 do
      for bx=0,1 do
       s=make_sparkle(
       0.25+flr(x1) + bx*0.5, 
       0.25+flr(pl.y-0.5) + by*0.5,
       22, 0)
       s.dx = (bx-0.5)/4
       s.dy = (by-0.5)/4
       s.max_t = 30 
       s.ddy = 0.02
      end
     end
     
    else
     if (abs(pl.dx) > 0.2) then
      sfx(12) -- thump
     end
    end
    
    -- bumping kills charge
    if (pl.charge < 20) then
     pl.charge = 0
    end
    
   end
	 end

  -- bounce	
  if (pl.super == 0 or 
      not broke_block) then
   pl.dx = pl.dx * -0.5
  end

  if (pl.kind == 3) then
   pl.d = pl.d * -1
   pl.dx=0
  end

	end
	
 -- y movement

 if (pl.dy < 0) then
  -- going up
  
  if (solid(pl.x-0.2, pl.y+pl.dy-1) or
   solid(pl.x+0.2, pl.y+pl.dy-1))
  then
   pl.dy=0
   
   -- search up for collision point
   while ( not (
   solid(pl.x-0.2, pl.y-1) or
   solid(pl.x+0.2, pl.y-1)))
   do
    pl.y = pl.y - 0.01
   end

  else
   pl.y = pl.y + pl.dy
  end

	else

  -- going down
  if (solid(pl.x-0.2, pl.y+pl.dy) or
   solid(pl.x+0.2, pl.y+pl.dy)) then

	  -- bounce
   if (pl.bounce > 0 and 
       pl.dy > 0.2) 
   then
    pl.dy = pl.dy * -pl.bounce
   else
 
    pl.standing=true
    pl.dy = 0
    
   end

   --snap down
   while (not (
     solid(pl.x-0.2,pl.y) or
     solid(pl.x+0.2,pl.y)
     ))
    do pl.y = pl.y + 0.05 end
  
   --pop up even if bouncing
   while(solid(pl.x-0.2,pl.y-0.1)) do
    pl.y = pl.y - 0.05 end
   while(solid(pl.x+0.2,pl.y-0.1)) do
    pl.y = pl.y - 0.05 end
    
  else
   pl.y = pl.y + pl.dy  
  end

 end


 -- gravity and friction
	pl.dy = pl.dy + pl.ddy
 pl.dy = pl.dy * 0.95

 -- x friction
 if (pl.standing) then
 	pl.dx = pl.dx * 0.7
	else
 	pl.dx = pl.dx * 0.8
	end

 -- counters
 pl.t = pl.t + 1
end

function collide_event(a1, a2)
 if(a1.kind==1) then
  if(a2.kind==2) then

   if (a2.frame==64) then
    a1.super = 120
    a1.dx = a1.dx * 2
    --a1.dy = a1.dy-0.1
   -- a1.standing = false
    sfx(13)
   end

   -- gem
   if (a2.frame==80) then
    a1.score = a1.score + 1
    sfx(9)
   end

   del(actor,a2)

  end
  
  -- charge or dupe monster
  
  if(a2.kind==3) then -- monster
   if(a1.charge > 0 or 
      a1.super  > 0 or
     (a1.y-a1.dy) < a2.y-0.7) then
    -- slow down player
    a1.dx = a1.dx * 0.7
    a1.dy = a1.dy * -0.7-- - 0.2
    
    -- explode
    for i=1,16 do
     s=make_sparkle(
      a2.x, a2.y-0.5, 96+rnd(3), 7)
     s.dx = s.dx + rnd(0.4)-0.2
     s.dy = s.dy + rnd(0.4)-0.2
     s.max_t = 30 
     s.ddy = 0.01
     
    end
    
    -- kill monster
    -- to do: in move_monster
    sfx(14)
    del(actor,a2)
    
   else

    -- player death
    a1.life=0


   end
  end
   
 end
end

function move_sparkle(sp)
 if (sp.t > sp.max_t) then
  del(sparkle,sp)
 end
 
 sp.x = sp.x + sp.dx
 sp.y = sp.y + sp.dy
 sp.dy= sp.dy+ sp.ddy
 sp.t = sp.t + 1
end


function collide(a1, a2)
 if (a1==a2) then return end
 local dx = a1.x - a2.x
 local dy = a1.y - a2.y
 if (abs(dx) < a1.w+a2.w) then
  if (abs(dy) < a1.h+a2.h) then
   collide_event(a1, a2)
  end
 end
end

function collisions()

 for a1 in all(actor) do
  collide(player,a1)
 end

end

function outgame_logic()

 if (death_t > 0) then
  death_t = death_t + 1
  if (death_t > 30 and 
   btn(4) or btn(5))
  then 
    music(-1)
    sfx(-1)
    sfx(0)
    dpal={0,1,1, 2,1,13,6,
          4,4,9,3, 13,1,13,14}
          
    -- palette fade
    for i=0,40 do
     for j=1,15 do
      col = j
      for k=1,((i+(j%5))/4) do
       col=dpal[col]
      end
      pal(j,col,1)
     end
     flip()
    end
    
    -- restart cart end of slice
    run()
   end
 end
end

function _update()

	foreach(actor, move_actor)		
	foreach(sparkle, move_sparkle)
 collisions()
 move_spawns(player.x, player.y)

 outgame_logic()
 
 if (corrupt_mode) then
  for i=1,5 do
   poke(rnd(0x8000),rnd(0x100))
  end
 end
 
	t=t+1
end

function draw_sparkle(s)
 
 if (s.col > 0) then
  for i=1,15 do
   pal(i,s.col)
  end
 end

 spr(s.frame, s.x*8-4, s.y*8-4)

 pal()
end

function draw_fire(pl)
 	spr(64 + rnd(4), 
  pl.x*8-4, pl.y*8-8, 
  1, 1, rnd(2) < 1)
  print("drawing fire")
end 

function draw_actor(pl)

 if (pl.pal ~= nil) then
  for i=1,15 do
--   pal(i, pl.pal[i])
  end
 end

 if (pl.charge ~= nil and 
     pl.charge > 0) then
 
  for i=2,15 do
   pal(i,7+((pl.t/2) % 8))
  end
--  pal(2,7)

 end

 if (pl.super ~= nil and 
     pl.super > 0) then
 
  for i=2,15 do
   pal(i,6+((pl.t/2) % 2))
  end

 end

	spr(pl.frame, 
  pl.x*8-4, pl.y*8-8, 
  1, 1, pl.d < 0)
  
 pal()
end

function _draw()

 -- sky
	camera (0, 0)
	rectfill (0,0,127,127,0) 
 --for y=1,7 do
 -- rect(0,63-y*2.5,127,63-y*2.5,6) end

 -- background
 
-- sspr(88,0,8,8,0,0,128,128)
 
 -- sky gradient
 if (false) then
 for y=0,127 do
  col=sget(88,(y+(y%4)*6) / 16)
  line(0,y,127,y,col)
 end
 end

 
--  local bgcol = 1 -- mountains
--  pal(5,bgcol) pal(2,bgcol)
--  pal(13,6) -- highlights 
--  y = 0
--  mapdraw (0, 32, 0, y, 16, 16, 0)
	-- pal()
 
 
 -- map and actors
	cam_x = mid(0,player.x*8-64,1024-128)


--  -- clouds behind mountains
 local x = cam_x*0.9
 x = x % 128
 local y=0
 mapdraw(16, 32, -x, y, 16, 16, 0)
 mapdraw(16, 32, 128-x, y, 16, 16, 0)

 --cam_y = mid(0,player.y*6-40,128)
 cam_y = 84
	camera (cam_x,cam_y)
--  pal(12,0)	
	mapdraw (0,0,0,0,128,64,1)
 pal()
 foreach(sparkle, draw_sparkle)
	foreach(actor, draw_actor)
	foreach(fire, draw_fire)
	
 -- forground map
--	mapdraw (0,0,0,0,128,64,2)

 -- player score
 camera(0,0)
 color(7)
 
 if (death_t > 60) then
  print("press button to restart",
   18-1,10-0,8+(t/4)%2)
  print("press button to restart",
   18,10,7)
 end
 
 if (false) then
  cursor(0,2)
  print("actors:"..count(actor))
  print("score:"..player.score)
  print(stat(1))
 end
end








__gfx__
000000000000000011111111111111110000000000000000d6666667d66667d666666667d666666711dddddddd11ddddd101dd11015555110000000000000000
000000000000000011111111555555550000000000eeee005d6666765d66765d666666765d666676000000000000010000000100000000000000000000000000
00000000007007001111111151551551000000000eeee7e055dddd6655dd6655dddddd6655dddd66000001000000000000000000000001000000000000000000
0000000000077000111111111111111100000000eeeeeeee55dddd6655dd6655dddddd6655dddd66044441044444010000044444000001000000000000000000
0000000000077000111111111111111100000000eeeeeeee55dddd6655dd6655dddddd6655dddd661ddd11011101ddddddddd544011111110000000000000000
00000000007007001111111111111111000030002222222255dddd6655dd6655dddddd6655dddd66001010004050000004444440005000000000000000000000
00000000000000001111111151111111000030300002d000511111d65111d651111111d6511111d6000000004050000111111000005000000000000000000000
0000000000000000111111111111111100303030000de0001111111d111111111d111111111d111d001000004010044444440000005000000000000000000000
00067000555ddd66010101999111101000005550000000000000d6666667d66667d6666666676667151444444dd0242225510511101101110000000000000000
0006700055dd66670111019991111011000055000000000000005d6666765d66765d66666676667600000d111100044444000500000005000000000000000000
0056670005d666700010011941111d100000500000000000000055dddd6655dd6655dddddd66dd6600000d11000001000000054400000d000000000000000000
0056670005d666700011119991111d100000500000000000000055dddd6655dd6655dddddd66dd6600000d00000000000000015444444d000000000000000000
05d666700056670000000199911110000000555000000000000055dddd6655dd6655dddddd66dd66110111105ddddd522222222210111d110000000000000000
05d666700056670000000119411111000000550000000000000055dddd6655dd6655dddddd66dd660050000000100d000011000000000d000000000000000000
55dd666700067000000019999d11111000005000000000000000511111d65111d651111111d611d600d0000000000d0000000000001000000000000000000000
555ddd6600067000000111119d111111000050000000000011111111111d111111111111111d111d00d000000004440000000000001000000000000000000000
555d5555555555550111111111d9d9d5ddededede00000001d9d9d5d1d9d9d5d1d9d9d5d1d9d9d5d111102222222555011110505555101510000000000000000
555555d5d555d555011111111ddd5dd55eeeded5d0000000ddd5dd55ddd5dd55ddd5dd55ddd5dd55000001002000050000000500000041500000000000000000
5d5d5d5d555d55d50111d11111d9d9dddded5d55500000001d9d9ddd1d9d9ddd1d9d9ddd1d9d9ddd000044400000050001000100444441500000000000000000
d5d5d5d5d5ddd5550111111d1d9d1d9d95d5d5d550050500d9d1d9d9d9d1d9d9d9d1d9d9d9d1d9d900044144000005000000000dddddddd00000000000000000
555ddd5d555d5d5501d111d111d51dd5ddfd5d5d500565001d11dd5d1d11dd5d1d11dd5d1d11dd5d105111141110122222220015555511110000000000000000
5dd5d5d5d555d5d501111dfd1ddd111155e5ddddd0056550ddd11115ddd11115ddd11115ddd11115005444440000000000100000000000000000000000000000
555d5d5d5d5d555501d111dfd99dd1d5dd5d5d5d5005555099dd1d5d99dd1d5d99dd1d5d99dd1d5d005004400010000000100004000000000000000000000000
d555d5d5ddd5d5d50dfd1dfdfd9d9d9d95d555d5d0055550d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d90ddd00000010000444444444401000000000000000000000
1d9d9d5d1d9d9d5d01d9d9d5d1d9d9d5d1d9d9d5d00000001dee9d5d1d9d9d5d1d9d9d5d1e5d5e5d55555101dddddddddd10151110115d110000000000000000
ddd5dd55ddd5dd550ddd5dd55ddd5dd55ddd5dd550000000ddd5dd55ddd5dd55ddd5dd55eee5ee5500000500000005000000050000115d000000000000000000
1d9d9ddd1d9d9ddd01d9d9ddd1d9d9ddd1d9d9ddd00000001dededdd1d9d9ddd1d9d9ddd1e5d5eee00000500000005000000051000005d000000000000000000
d9d1d9d9d9d1d9d90d9d1d9d9d9d1d9d9d9d1d9d90007700ded1d9d9d9d1d9d9d9d1d9d9d5d1d5ee00010100000005000000050000005d000000000000000000
1d51dd5d1d51dd5d01d51dd5d1d51dd5d1d51dd5d00077001d11dd5d1d11dd5d1d11dd5d1d11dd5ddddd1010555dd101ddd011dd555151110000000000000000
ddd11115ddd111150ddd11115ddd11115ddd111150000000ddd11115ddd11115ddd11115ddd11115001044400014444000504444440000000000000000000000
99dd1d5d99dd1d5d099dd1d5d99dd1d5d99dd1d5d0000000eedd1d5d99dd1d5d99dd1d5deedd1d5d001000000010000000500000001000000000000000000000
d9d9d9d9d9d9d9d90d9d9d9d9d9d9d9d9d9d9d9d90000000ded9d9d9d9d9d9d9d9d9d9d9dededede001000000010000000500000001000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00080000000800000000080000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00080800000880000000880000008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088e800000e8000000e800000008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088e800008e8000008e800000808800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088880000808800008888000088e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
024482000244e2000244820002448200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02244440022444400224444002244440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000bb00000000000000000000000000000000000000000000000000003003000030030000000000000000000000000000000000000000000
000de000000ef0000000b00000000000000000000000000000000000000000000300300003333400033333000300300000000000000000000000000000000000
00d17e0000ed7f000994399000000000000000000000000000000000000000000333330003133140031334000333340000000000000000000000000000000000
0d1de7e00edef7f099a9979900000000000000000000000000000000000000000313340003333340033333400313314000000000000000000000000000000000
0efed1d00f7fede0949999a9aaa00000000000000000000000000000000000000333334000333040003330400333334000000000000000000000000000000000
00ef1d0000f7de0094499999a0aaaaa0000000000000000000000000000000000033304000333400033330400033304000000000000000000000000000000000
000ed000000fe00009449990a0a0a0a0000000000000000000000000000000000333304003000300000034000333340000000000000000000000000000000000
000000000000000000999900aaa000a0000000000000000000000000000000000030340000000000000000000030300000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000300300003003000030030000300300003003000030030000300300003003000
00000000000700000000000000000000000000000000000000000000000000000333330003333400033333000333340003333300033334000333330003333400
00077000007070000000000000000000000000000000000000000000000000000313340003133140031334000313314003133400031331400313340003133140
00077000000700000000700000000000000000000000000000000000000000000333334003333340033333400333334003333340033333400333334003333340
00000000000000000000000000000000000000000000000000000000000000000033304000333040003330400033304000333040003330400033304000333040
00000000000000000000000000000000000000000000000000000000000000000333304003333400033330400333340003333040033334000333304003333400
00000000000000000000000000000000000000000000000000000000000000000030340000300300003034000030300000303400003030000030340000303000
00000000000000000077770000777700076767670076667000076700006767600000000000000000000000000000000000000000000000000000000000000000
0077770000777700077787700777e770000050000000500000005000000050000000000000000000000000000000000000000000000000000000000000000000
077787700777b7700777777007777770007777000077770000777700007777000000000000000000000000000000000000000000000000000000000000000000
07777770077777700717771007177710077787700777877007778770077787700000000000000000000000000000000000000000000000000000000000000000
07177710071777100777777007777770071777100717771007177710071777100000000000000000000000000000000000000000000000000000000000000000
0777777007777770a999999009a99990077777700777777007777770077777700000000000000000000000000000000000000000000000000000000000000000
0999999a0999999000000a000000000a099999900999999009999990099999900000000000000000000000000000000000000000000000000000000000000000
00a000000a0000a0000000000000000000a00a0000a000a00a0000a00a000a000000000000000000000000000000000000000000000000000000000000000000
0000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000cf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000ffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000444fff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000444400444ff040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00044444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00004440044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000f000f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000f000f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000d000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000
__gff__
0000030301810303030300010101010003030101010103030303010101010000030303030301030303030101010100000303030303000303030301010100000000000000000000000000000000000000200020200000000000000000000000000000000000000000000000000000000008000000000000000000000000000000
0101000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000006070806090700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000006060607080600000000000000000000000044440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607080606070806000707080609070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500050005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060708060609070606060708060000000000000000000000000000000000000000000000000000000000000000000000505050505040000000000009000900090009000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607080600070708060607080600070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009090708090909090900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06060706070806000707080609070800000000000000000000000000004b4c00000000000000000000000000000000000000000000000000000000000009090a0a0a0a0a070800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06060606070806090706060708060907080000500000000000000000005b5c000000000000000012130000000000000000000000000015000000000000090a530a0a0a0a0a0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015000000
06060708060007080606070806090708000000000000000000000000000000000000000000000012130000000000000000000000000014250000000000090a0a0a0a520a0b1900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014150000
00000000000000110000000000000000000006060600000000000054545400545400000000000012130000000000000000000303030303030000000000090a0a0a700a0b190900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014140000
0015000000000000000000000000000000000000000000000000005454101054540000000000001213000000000000000018020222222202391800000009070809070809070800000000000000000000000000000000000000000000000000000000000000001500000000000000000000000000000000000000000044450000
0000000000000000000000000800000708000000000000000000005454121354540000000000001213000000000000000028222023232421282839391803030303030303030303030015000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000014140000
0000000000000000000007000609000800000000000000000000005454121354540000000070001213000000060600000028232324232323282728282820202320202020202020203914000000000000000000000000000000000000000000001500000000001415000000000000000000000000000000000603030303030303
0000000000000000000000000000000000000000000000000000545454121354540000000003030303030303030303030000282828282827282728282823232323232323232323232739000300000000000000000000000606000000000015001415000000151414000000000000000000000000000000030302020202020202
0015000000000000000000000000000000000000000000000000005454121354540000000902020202020222220202020000282828282728272828282828282828282828282828272828180203030303030300000070000606000000150014001414000000145014000000000000700000000000700000020202020202020202
0014000000000000808100000000000000001500000000000000000000121300000070070802022222222023232102020000383838383838383838383838380606060606060638383838380202020202020203030303030303007000140414001414000404141414000000000303030303030303030303020202020202020202
1414040068004000909100000600000025001400000000007000030303030303030303030302202323232323232321020303030303030303030303030303030303030303030303700370030202020202020202020202020202030303030303030303030303030303030303030202020202020202020202020202020202020202
0303030303030303030303030303030303030303030303030303020202020222020202022220232323232323232323212202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202
2222020202020202020202020202022222222222020202020202020202202323212222202323232323232323232323232321220202020222222202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202
2323212222222222222222222222202323232323212222020202022220232323232323232323232323232323232323232323232122222023232321222222222202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202
2323232323232323232323232323232324232323242323212121202323232323232323232323232323232323232323232323232323232323232323232323232322220202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202
23232323232d2323232323232323242323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323230202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202000200020000000000
2323232323232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232302020202020202020202020202020202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000
2323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232302020202020202020202020202020202020202020202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000
2323232323232323232323232323232323232323232323232323232323232323232323232323232302232323232302020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00030000072100b2100e2100721007210092100d2100d2200722007220072200b2100d2100821007210072100a21007210072100721007220072200b2200e2100721007210072100721007210072100d2100f235
00550000097450a7550775005745057450675508745097550974208716087450875507755077250875008755087450675607735067260774208755077450775507745087550874508746097450b7550a7420a725
004300000661506610066100661511605126001660516600166151661016615166101a6051a6001c6001c6051261510610106100c615136051360013605136001561518610196151961011605116001160511600
01100000305453c52500600006003e625006000c30318600355250050000600006003e625006000060018600295263251529515006003e625006000060018600305250050018600006003e625246040060000600
01100000004750c47518475004750a475004750a4750c475004750a4750c475004750a4750c4751147513475004750c4750a475004750a475004750a4750c475004750c47516475004751647518475114750c475
01100000180721a0751b0721f0721e0751f0751e0721f075270752607724075200721f0751b0771a0751b07518072180621805218042180350000000000000000000000000000000000000000000000000000000
011000000c37518375243751f3751b3721a372193711b372183721837217371163511533114311133001830214302143021830218302003000030000300003000030000300003000030000300003000030000300
011000000c37300300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
000000000b6200e6201301014010170101a0102100027000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002b7602e7503a73033740377302e75033730337303372035710377103a710337103a7103c7103c7003f700007000070000700007000070000700007000070000700007000070000700007000070000700
00020000276501d65013650106500c6400e63022620116300b63004630026101b6100861003610076101260013600106000d60010600116000e6001160012600116000a600066000960003600026000260002600
000100002257524575275652455527555275552b54524525225352252527525275252b5252e515305152e515305052e505305052e5053050530505335052b5052e5052b5052e5052e5053350530505335052e505
000200002005325043160231002304013030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102000013571165731b5751d5711157313575165711b5731b575225711b573185751b5711f573245751b5711f57324565295611f563185611d555245532b5552b5412b5433053137535335333a5212b5252e513
000200002b071270711b07118071100710b0710607104071040610606103061040510305101041010310102101011040110000000000000000000000000000000000000000000000000000000000000000000000
010200002e17029170171731a171231631d16111143141610c1230a11107110001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
01040000185702257024570225701f5701d5701f5701d57018570165701857016570135701157013570115700c5700d570135701457018560195501f550205302453024520225202452022510245102251024500
__music__
01 01024144
00 02434144
00 01034244
02 02034244
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144

